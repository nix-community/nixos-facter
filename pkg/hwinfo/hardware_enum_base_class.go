// Code generated by "enumer -type=BaseClass -json -transform=snake -trimprefix BaseClass -output=./hardware_enum_base_class.go"; DO NOT EDIT.

package hwinfo

import (
	"encoding/json"
	"fmt"
	"strings"
)

const (
	_BaseClassName_0      = "nonestoragenetworkdisplaymultimediamemorybridgecommsysteminputdockingprocessorserialwirelessi2o"
	_BaseClassLowerName_0 = "nonestoragenetworkdisplaymultimediamemorybridgecommsysteminputdockingprocessorserialwirelessi2o"
	_BaseClassName_1      = "othermonitorinternalmodemisdnps2mousestorage_devicenetwork_interfacekeyboardprinterhubbraillescannerjoystickchipcardcameraframebufferdvbtvpartitiondslbluetoothfingerprintmmc_controllertouchpad"
	_BaseClassLowerName_1 = "othermonitorinternalmodemisdnps2mousestorage_devicenetwork_interfacekeyboardprinterhubbraillescannerjoystickchipcardcameraframebufferdvbtvpartitiondslbluetoothfingerprintmmc_controllertouchpad"
)

var (
	_BaseClassIndex_0 = [...]uint8{0, 4, 11, 18, 25, 35, 41, 47, 51, 57, 62, 69, 78, 84, 92, 95}
	_BaseClassIndex_1 = [...]uint8{0, 5, 12, 20, 25, 29, 32, 37, 51, 68, 76, 83, 86, 93, 100, 108, 116, 122, 133, 136, 138, 147, 150, 159, 170, 184, 192}
)

func (i BaseClass) String() string {
	switch {
	case 0 <= i && i <= 14:
		return _BaseClassName_0[_BaseClassIndex_0[i]:_BaseClassIndex_0[i+1]]
	case 255 <= i && i <= 280:
		i -= 255
		return _BaseClassName_1[_BaseClassIndex_1[i]:_BaseClassIndex_1[i+1]]
	default:
		return fmt.Sprintf("BaseClass(%d)", i)
	}
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _BaseClassNoOp() {
	var x [1]struct{}
	_ = x[BaseClassNone-(0)]
	_ = x[BaseClassStorage-(1)]
	_ = x[BaseClassNetwork-(2)]
	_ = x[BaseClassDisplay-(3)]
	_ = x[BaseClassMultimedia-(4)]
	_ = x[BaseClassMemory-(5)]
	_ = x[BaseClassBridge-(6)]
	_ = x[BaseClassComm-(7)]
	_ = x[BaseClassSystem-(8)]
	_ = x[BaseClassInput-(9)]
	_ = x[BaseClassDocking-(10)]
	_ = x[BaseClassProcessor-(11)]
	_ = x[BaseClassSerial-(12)]
	_ = x[BaseClassWireless-(13)]
	_ = x[BaseClassI2o-(14)]
	_ = x[BaseClassOther-(255)]
	_ = x[BaseClassMonitor-(256)]
	_ = x[BaseClassInternal-(257)]
	_ = x[BaseClassModem-(258)]
	_ = x[BaseClassIsdn-(259)]
	_ = x[BaseClassPs2-(260)]
	_ = x[BaseClassMouse-(261)]
	_ = x[BaseClassStorageDevice-(262)]
	_ = x[BaseClassNetworkInterface-(263)]
	_ = x[BaseClassKeyboard-(264)]
	_ = x[BaseClassPrinter-(265)]
	_ = x[BaseClassHub-(266)]
	_ = x[BaseClassBraille-(267)]
	_ = x[BaseClassScanner-(268)]
	_ = x[BaseClassJoystick-(269)]
	_ = x[BaseClassChipcard-(270)]
	_ = x[BaseClassCamera-(271)]
	_ = x[BaseClassFramebuffer-(272)]
	_ = x[BaseClassDvb-(273)]
	_ = x[BaseClassTv-(274)]
	_ = x[BaseClassPartition-(275)]
	_ = x[BaseClassDsl-(276)]
	_ = x[BaseClassBluetooth-(277)]
	_ = x[BaseClassFingerprint-(278)]
	_ = x[BaseClassMmcController-(279)]
	_ = x[BaseClassTouchpad-(280)]
}

var _BaseClassValues = []BaseClass{BaseClassNone, BaseClassStorage, BaseClassNetwork, BaseClassDisplay, BaseClassMultimedia, BaseClassMemory, BaseClassBridge, BaseClassComm, BaseClassSystem, BaseClassInput, BaseClassDocking, BaseClassProcessor, BaseClassSerial, BaseClassWireless, BaseClassI2o, BaseClassOther, BaseClassMonitor, BaseClassInternal, BaseClassModem, BaseClassIsdn, BaseClassPs2, BaseClassMouse, BaseClassStorageDevice, BaseClassNetworkInterface, BaseClassKeyboard, BaseClassPrinter, BaseClassHub, BaseClassBraille, BaseClassScanner, BaseClassJoystick, BaseClassChipcard, BaseClassCamera, BaseClassFramebuffer, BaseClassDvb, BaseClassTv, BaseClassPartition, BaseClassDsl, BaseClassBluetooth, BaseClassFingerprint, BaseClassMmcController, BaseClassTouchpad}

var _BaseClassNameToValueMap = map[string]BaseClass{
	_BaseClassName_0[0:4]:          BaseClassNone,
	_BaseClassLowerName_0[0:4]:     BaseClassNone,
	_BaseClassName_0[4:11]:         BaseClassStorage,
	_BaseClassLowerName_0[4:11]:    BaseClassStorage,
	_BaseClassName_0[11:18]:        BaseClassNetwork,
	_BaseClassLowerName_0[11:18]:   BaseClassNetwork,
	_BaseClassName_0[18:25]:        BaseClassDisplay,
	_BaseClassLowerName_0[18:25]:   BaseClassDisplay,
	_BaseClassName_0[25:35]:        BaseClassMultimedia,
	_BaseClassLowerName_0[25:35]:   BaseClassMultimedia,
	_BaseClassName_0[35:41]:        BaseClassMemory,
	_BaseClassLowerName_0[35:41]:   BaseClassMemory,
	_BaseClassName_0[41:47]:        BaseClassBridge,
	_BaseClassLowerName_0[41:47]:   BaseClassBridge,
	_BaseClassName_0[47:51]:        BaseClassComm,
	_BaseClassLowerName_0[47:51]:   BaseClassComm,
	_BaseClassName_0[51:57]:        BaseClassSystem,
	_BaseClassLowerName_0[51:57]:   BaseClassSystem,
	_BaseClassName_0[57:62]:        BaseClassInput,
	_BaseClassLowerName_0[57:62]:   BaseClassInput,
	_BaseClassName_0[62:69]:        BaseClassDocking,
	_BaseClassLowerName_0[62:69]:   BaseClassDocking,
	_BaseClassName_0[69:78]:        BaseClassProcessor,
	_BaseClassLowerName_0[69:78]:   BaseClassProcessor,
	_BaseClassName_0[78:84]:        BaseClassSerial,
	_BaseClassLowerName_0[78:84]:   BaseClassSerial,
	_BaseClassName_0[84:92]:        BaseClassWireless,
	_BaseClassLowerName_0[84:92]:   BaseClassWireless,
	_BaseClassName_0[92:95]:        BaseClassI2o,
	_BaseClassLowerName_0[92:95]:   BaseClassI2o,
	_BaseClassName_1[0:5]:          BaseClassOther,
	_BaseClassLowerName_1[0:5]:     BaseClassOther,
	_BaseClassName_1[5:12]:         BaseClassMonitor,
	_BaseClassLowerName_1[5:12]:    BaseClassMonitor,
	_BaseClassName_1[12:20]:        BaseClassInternal,
	_BaseClassLowerName_1[12:20]:   BaseClassInternal,
	_BaseClassName_1[20:25]:        BaseClassModem,
	_BaseClassLowerName_1[20:25]:   BaseClassModem,
	_BaseClassName_1[25:29]:        BaseClassIsdn,
	_BaseClassLowerName_1[25:29]:   BaseClassIsdn,
	_BaseClassName_1[29:32]:        BaseClassPs2,
	_BaseClassLowerName_1[29:32]:   BaseClassPs2,
	_BaseClassName_1[32:37]:        BaseClassMouse,
	_BaseClassLowerName_1[32:37]:   BaseClassMouse,
	_BaseClassName_1[37:51]:        BaseClassStorageDevice,
	_BaseClassLowerName_1[37:51]:   BaseClassStorageDevice,
	_BaseClassName_1[51:68]:        BaseClassNetworkInterface,
	_BaseClassLowerName_1[51:68]:   BaseClassNetworkInterface,
	_BaseClassName_1[68:76]:        BaseClassKeyboard,
	_BaseClassLowerName_1[68:76]:   BaseClassKeyboard,
	_BaseClassName_1[76:83]:        BaseClassPrinter,
	_BaseClassLowerName_1[76:83]:   BaseClassPrinter,
	_BaseClassName_1[83:86]:        BaseClassHub,
	_BaseClassLowerName_1[83:86]:   BaseClassHub,
	_BaseClassName_1[86:93]:        BaseClassBraille,
	_BaseClassLowerName_1[86:93]:   BaseClassBraille,
	_BaseClassName_1[93:100]:       BaseClassScanner,
	_BaseClassLowerName_1[93:100]:  BaseClassScanner,
	_BaseClassName_1[100:108]:      BaseClassJoystick,
	_BaseClassLowerName_1[100:108]: BaseClassJoystick,
	_BaseClassName_1[108:116]:      BaseClassChipcard,
	_BaseClassLowerName_1[108:116]: BaseClassChipcard,
	_BaseClassName_1[116:122]:      BaseClassCamera,
	_BaseClassLowerName_1[116:122]: BaseClassCamera,
	_BaseClassName_1[122:133]:      BaseClassFramebuffer,
	_BaseClassLowerName_1[122:133]: BaseClassFramebuffer,
	_BaseClassName_1[133:136]:      BaseClassDvb,
	_BaseClassLowerName_1[133:136]: BaseClassDvb,
	_BaseClassName_1[136:138]:      BaseClassTv,
	_BaseClassLowerName_1[136:138]: BaseClassTv,
	_BaseClassName_1[138:147]:      BaseClassPartition,
	_BaseClassLowerName_1[138:147]: BaseClassPartition,
	_BaseClassName_1[147:150]:      BaseClassDsl,
	_BaseClassLowerName_1[147:150]: BaseClassDsl,
	_BaseClassName_1[150:159]:      BaseClassBluetooth,
	_BaseClassLowerName_1[150:159]: BaseClassBluetooth,
	_BaseClassName_1[159:170]:      BaseClassFingerprint,
	_BaseClassLowerName_1[159:170]: BaseClassFingerprint,
	_BaseClassName_1[170:184]:      BaseClassMmcController,
	_BaseClassLowerName_1[170:184]: BaseClassMmcController,
	_BaseClassName_1[184:192]:      BaseClassTouchpad,
	_BaseClassLowerName_1[184:192]: BaseClassTouchpad,
}

var _BaseClassNames = []string{
	_BaseClassName_0[0:4],
	_BaseClassName_0[4:11],
	_BaseClassName_0[11:18],
	_BaseClassName_0[18:25],
	_BaseClassName_0[25:35],
	_BaseClassName_0[35:41],
	_BaseClassName_0[41:47],
	_BaseClassName_0[47:51],
	_BaseClassName_0[51:57],
	_BaseClassName_0[57:62],
	_BaseClassName_0[62:69],
	_BaseClassName_0[69:78],
	_BaseClassName_0[78:84],
	_BaseClassName_0[84:92],
	_BaseClassName_0[92:95],
	_BaseClassName_1[0:5],
	_BaseClassName_1[5:12],
	_BaseClassName_1[12:20],
	_BaseClassName_1[20:25],
	_BaseClassName_1[25:29],
	_BaseClassName_1[29:32],
	_BaseClassName_1[32:37],
	_BaseClassName_1[37:51],
	_BaseClassName_1[51:68],
	_BaseClassName_1[68:76],
	_BaseClassName_1[76:83],
	_BaseClassName_1[83:86],
	_BaseClassName_1[86:93],
	_BaseClassName_1[93:100],
	_BaseClassName_1[100:108],
	_BaseClassName_1[108:116],
	_BaseClassName_1[116:122],
	_BaseClassName_1[122:133],
	_BaseClassName_1[133:136],
	_BaseClassName_1[136:138],
	_BaseClassName_1[138:147],
	_BaseClassName_1[147:150],
	_BaseClassName_1[150:159],
	_BaseClassName_1[159:170],
	_BaseClassName_1[170:184],
	_BaseClassName_1[184:192],
}

// BaseClassString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func BaseClassString(s string) (BaseClass, error) {
	if val, ok := _BaseClassNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _BaseClassNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to BaseClass values", s)
}

// BaseClassValues returns all values of the enum
func BaseClassValues() []BaseClass {
	return _BaseClassValues
}

// BaseClassStrings returns a slice of all String values of the enum
func BaseClassStrings() []string {
	strs := make([]string, len(_BaseClassNames))
	copy(strs, _BaseClassNames)
	return strs
}

// IsABaseClass returns "true" if the value is listed in the enum definition. "false" otherwise
func (i BaseClass) IsABaseClass() bool {
	for _, v := range _BaseClassValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for BaseClass
func (i BaseClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for BaseClass
func (i *BaseClass) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("BaseClass should be a string, got %s", data)
	}

	var err error
	*i, err = BaseClassString(s)
	return err
}
