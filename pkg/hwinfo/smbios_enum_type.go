// Code generated by "enumer -type=SmbiosType -json -transform=snake -trimprefix SmbiosType -output=./smbios_enum_type.go"; DO NOT EDIT.

package hwinfo

import (
	"encoding/json"
	"fmt"
	"strings"
)

const (
	_SmbiosTypeName_0      = "biossystemboardchassisprocessormemory_controllermemory_modulecacheport_connectorslotonboardoem_stringsconfiglanguagegroup_associationsevent_logmemory_arraymemory_devicememory_errormemory_array_mapped_addressmemory_device_mapped_addresspointing_devicebatterysystem_resethardware_securitypower_controlsvoltagecooling_devicetemperaturecurrentout_of_band_remote_accessboot_integrity_servicessystem_bootmemory64_errormanagement_deviceman_device_componentman_device_thresholdmemory_channelipmi_devicesystem_power_supplyadditional_infoonboard_extendedmanagement_controller_host_interfacetpmprocessor_additionalfirmware_inventory"
	_SmbiosTypeLowerName_0 = "biossystemboardchassisprocessormemory_controllermemory_modulecacheport_connectorslotonboardoem_stringsconfiglanguagegroup_associationsevent_logmemory_arraymemory_devicememory_errormemory_array_mapped_addressmemory_device_mapped_addresspointing_devicebatterysystem_resethardware_securitypower_controlsvoltagecooling_devicetemperaturecurrentout_of_band_remote_accessboot_integrity_servicessystem_bootmemory64_errormanagement_deviceman_device_componentman_device_thresholdmemory_channelipmi_devicesystem_power_supplyadditional_infoonboard_extendedmanagement_controller_host_interfacetpmprocessor_additionalfirmware_inventory"
	_SmbiosTypeName_1      = "inactiveend_of_table"
	_SmbiosTypeLowerName_1 = "inactiveend_of_table"
)

var (
	_SmbiosTypeIndex_0 = [...]uint16{0, 4, 10, 15, 22, 31, 48, 61, 66, 80, 84, 91, 102, 108, 116, 134, 143, 155, 168, 180, 207, 235, 250, 257, 269, 286, 300, 307, 321, 332, 339, 364, 387, 398, 412, 429, 449, 469, 483, 494, 513, 528, 544, 580, 583, 603, 621}
	_SmbiosTypeIndex_1 = [...]uint8{0, 8, 20}
)

func (i SmbiosType) String() string {
	switch {
	case 0 <= i && i <= 45:
		return _SmbiosTypeName_0[_SmbiosTypeIndex_0[i]:_SmbiosTypeIndex_0[i+1]]
	case 126 <= i && i <= 127:
		i -= 126
		return _SmbiosTypeName_1[_SmbiosTypeIndex_1[i]:_SmbiosTypeIndex_1[i+1]]
	default:
		return fmt.Sprintf("SmbiosType(%d)", i)
	}
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SmbiosTypeNoOp() {
	var x [1]struct{}
	_ = x[SmbiosTypeBios-(0)]
	_ = x[SmbiosTypeSystem-(1)]
	_ = x[SmbiosTypeBoard-(2)]
	_ = x[SmbiosTypeChassis-(3)]
	_ = x[SmbiosTypeProcessor-(4)]
	_ = x[SmbiosTypeMemoryController-(5)]
	_ = x[SmbiosTypeMemoryModule-(6)]
	_ = x[SmbiosTypeCache-(7)]
	_ = x[SmbiosTypePortConnector-(8)]
	_ = x[SmbiosTypeSlot-(9)]
	_ = x[SmbiosTypeOnboard-(10)]
	_ = x[SmbiosTypeOEMStrings-(11)]
	_ = x[SmbiosTypeConfig-(12)]
	_ = x[SmbiosTypeLanguage-(13)]
	_ = x[SmbiosTypeGroupAssociations-(14)]
	_ = x[SmbiosTypeEventLog-(15)]
	_ = x[SmbiosTypeMemoryArray-(16)]
	_ = x[SmbiosTypeMemoryDevice-(17)]
	_ = x[SmbiosTypeMemoryError-(18)]
	_ = x[SmbiosTypeMemoryArrayMappedAddress-(19)]
	_ = x[SmbiosTypeMemoryDeviceMappedAddress-(20)]
	_ = x[SmbiosTypePointingDevice-(21)]
	_ = x[SmbiosTypeBattery-(22)]
	_ = x[SmbiosTypeSystemReset-(23)]
	_ = x[SmbiosTypeHardwareSecurity-(24)]
	_ = x[SmbiosTypePowerControls-(25)]
	_ = x[SmbiosTypeVoltage-(26)]
	_ = x[SmbiosTypeCoolingDevice-(27)]
	_ = x[SmbiosTypeTemperature-(28)]
	_ = x[SmbiosTypeCurrent-(29)]
	_ = x[SmbiosTypeOutOfBandRemoteAccess-(30)]
	_ = x[SmbiosTypeBootIntegrityServices-(31)]
	_ = x[SmbiosTypeSystemBoot-(32)]
	_ = x[SmbiosTypeMemory64Error-(33)]
	_ = x[SmbiosTypeManagementDevice-(34)]
	_ = x[SmbiosTypeManDeviceComponent-(35)]
	_ = x[SmbiosTypeManDeviceThreshold-(36)]
	_ = x[SmbiosTypeMemoryChannel-(37)]
	_ = x[SmbiosTypeIPMIDevice-(38)]
	_ = x[SmbiosTypeSystemPowerSupply-(39)]
	_ = x[SmbiosTypeAdditionalInfo-(40)]
	_ = x[SmbiosTypeOnboardExtended-(41)]
	_ = x[SmbiosTypeManagementControllerHostInterface-(42)]
	_ = x[SmbiosTypeTPM-(43)]
	_ = x[SmbiosTypeProcessorAdditional-(44)]
	_ = x[SmbiosTypeFirmwareInventory-(45)]
	_ = x[SmbiosTypeInactive-(126)]
	_ = x[SmbiosTypeEndOfTable-(127)]
}

var _SmbiosTypeValues = []SmbiosType{SmbiosTypeBios, SmbiosTypeSystem, SmbiosTypeBoard, SmbiosTypeChassis, SmbiosTypeProcessor, SmbiosTypeMemoryController, SmbiosTypeMemoryModule, SmbiosTypeCache, SmbiosTypePortConnector, SmbiosTypeSlot, SmbiosTypeOnboard, SmbiosTypeOEMStrings, SmbiosTypeConfig, SmbiosTypeLanguage, SmbiosTypeGroupAssociations, SmbiosTypeEventLog, SmbiosTypeMemoryArray, SmbiosTypeMemoryDevice, SmbiosTypeMemoryError, SmbiosTypeMemoryArrayMappedAddress, SmbiosTypeMemoryDeviceMappedAddress, SmbiosTypePointingDevice, SmbiosTypeBattery, SmbiosTypeSystemReset, SmbiosTypeHardwareSecurity, SmbiosTypePowerControls, SmbiosTypeVoltage, SmbiosTypeCoolingDevice, SmbiosTypeTemperature, SmbiosTypeCurrent, SmbiosTypeOutOfBandRemoteAccess, SmbiosTypeBootIntegrityServices, SmbiosTypeSystemBoot, SmbiosTypeMemory64Error, SmbiosTypeManagementDevice, SmbiosTypeManDeviceComponent, SmbiosTypeManDeviceThreshold, SmbiosTypeMemoryChannel, SmbiosTypeIPMIDevice, SmbiosTypeSystemPowerSupply, SmbiosTypeAdditionalInfo, SmbiosTypeOnboardExtended, SmbiosTypeManagementControllerHostInterface, SmbiosTypeTPM, SmbiosTypeProcessorAdditional, SmbiosTypeFirmwareInventory, SmbiosTypeInactive, SmbiosTypeEndOfTable}

var _SmbiosTypeNameToValueMap = map[string]SmbiosType{
	_SmbiosTypeName_0[0:4]:          SmbiosTypeBios,
	_SmbiosTypeLowerName_0[0:4]:     SmbiosTypeBios,
	_SmbiosTypeName_0[4:10]:         SmbiosTypeSystem,
	_SmbiosTypeLowerName_0[4:10]:    SmbiosTypeSystem,
	_SmbiosTypeName_0[10:15]:        SmbiosTypeBoard,
	_SmbiosTypeLowerName_0[10:15]:   SmbiosTypeBoard,
	_SmbiosTypeName_0[15:22]:        SmbiosTypeChassis,
	_SmbiosTypeLowerName_0[15:22]:   SmbiosTypeChassis,
	_SmbiosTypeName_0[22:31]:        SmbiosTypeProcessor,
	_SmbiosTypeLowerName_0[22:31]:   SmbiosTypeProcessor,
	_SmbiosTypeName_0[31:48]:        SmbiosTypeMemoryController,
	_SmbiosTypeLowerName_0[31:48]:   SmbiosTypeMemoryController,
	_SmbiosTypeName_0[48:61]:        SmbiosTypeMemoryModule,
	_SmbiosTypeLowerName_0[48:61]:   SmbiosTypeMemoryModule,
	_SmbiosTypeName_0[61:66]:        SmbiosTypeCache,
	_SmbiosTypeLowerName_0[61:66]:   SmbiosTypeCache,
	_SmbiosTypeName_0[66:80]:        SmbiosTypePortConnector,
	_SmbiosTypeLowerName_0[66:80]:   SmbiosTypePortConnector,
	_SmbiosTypeName_0[80:84]:        SmbiosTypeSlot,
	_SmbiosTypeLowerName_0[80:84]:   SmbiosTypeSlot,
	_SmbiosTypeName_0[84:91]:        SmbiosTypeOnboard,
	_SmbiosTypeLowerName_0[84:91]:   SmbiosTypeOnboard,
	_SmbiosTypeName_0[91:102]:       SmbiosTypeOEMStrings,
	_SmbiosTypeLowerName_0[91:102]:  SmbiosTypeOEMStrings,
	_SmbiosTypeName_0[102:108]:      SmbiosTypeConfig,
	_SmbiosTypeLowerName_0[102:108]: SmbiosTypeConfig,
	_SmbiosTypeName_0[108:116]:      SmbiosTypeLanguage,
	_SmbiosTypeLowerName_0[108:116]: SmbiosTypeLanguage,
	_SmbiosTypeName_0[116:134]:      SmbiosTypeGroupAssociations,
	_SmbiosTypeLowerName_0[116:134]: SmbiosTypeGroupAssociations,
	_SmbiosTypeName_0[134:143]:      SmbiosTypeEventLog,
	_SmbiosTypeLowerName_0[134:143]: SmbiosTypeEventLog,
	_SmbiosTypeName_0[143:155]:      SmbiosTypeMemoryArray,
	_SmbiosTypeLowerName_0[143:155]: SmbiosTypeMemoryArray,
	_SmbiosTypeName_0[155:168]:      SmbiosTypeMemoryDevice,
	_SmbiosTypeLowerName_0[155:168]: SmbiosTypeMemoryDevice,
	_SmbiosTypeName_0[168:180]:      SmbiosTypeMemoryError,
	_SmbiosTypeLowerName_0[168:180]: SmbiosTypeMemoryError,
	_SmbiosTypeName_0[180:207]:      SmbiosTypeMemoryArrayMappedAddress,
	_SmbiosTypeLowerName_0[180:207]: SmbiosTypeMemoryArrayMappedAddress,
	_SmbiosTypeName_0[207:235]:      SmbiosTypeMemoryDeviceMappedAddress,
	_SmbiosTypeLowerName_0[207:235]: SmbiosTypeMemoryDeviceMappedAddress,
	_SmbiosTypeName_0[235:250]:      SmbiosTypePointingDevice,
	_SmbiosTypeLowerName_0[235:250]: SmbiosTypePointingDevice,
	_SmbiosTypeName_0[250:257]:      SmbiosTypeBattery,
	_SmbiosTypeLowerName_0[250:257]: SmbiosTypeBattery,
	_SmbiosTypeName_0[257:269]:      SmbiosTypeSystemReset,
	_SmbiosTypeLowerName_0[257:269]: SmbiosTypeSystemReset,
	_SmbiosTypeName_0[269:286]:      SmbiosTypeHardwareSecurity,
	_SmbiosTypeLowerName_0[269:286]: SmbiosTypeHardwareSecurity,
	_SmbiosTypeName_0[286:300]:      SmbiosTypePowerControls,
	_SmbiosTypeLowerName_0[286:300]: SmbiosTypePowerControls,
	_SmbiosTypeName_0[300:307]:      SmbiosTypeVoltage,
	_SmbiosTypeLowerName_0[300:307]: SmbiosTypeVoltage,
	_SmbiosTypeName_0[307:321]:      SmbiosTypeCoolingDevice,
	_SmbiosTypeLowerName_0[307:321]: SmbiosTypeCoolingDevice,
	_SmbiosTypeName_0[321:332]:      SmbiosTypeTemperature,
	_SmbiosTypeLowerName_0[321:332]: SmbiosTypeTemperature,
	_SmbiosTypeName_0[332:339]:      SmbiosTypeCurrent,
	_SmbiosTypeLowerName_0[332:339]: SmbiosTypeCurrent,
	_SmbiosTypeName_0[339:364]:      SmbiosTypeOutOfBandRemoteAccess,
	_SmbiosTypeLowerName_0[339:364]: SmbiosTypeOutOfBandRemoteAccess,
	_SmbiosTypeName_0[364:387]:      SmbiosTypeBootIntegrityServices,
	_SmbiosTypeLowerName_0[364:387]: SmbiosTypeBootIntegrityServices,
	_SmbiosTypeName_0[387:398]:      SmbiosTypeSystemBoot,
	_SmbiosTypeLowerName_0[387:398]: SmbiosTypeSystemBoot,
	_SmbiosTypeName_0[398:412]:      SmbiosTypeMemory64Error,
	_SmbiosTypeLowerName_0[398:412]: SmbiosTypeMemory64Error,
	_SmbiosTypeName_0[412:429]:      SmbiosTypeManagementDevice,
	_SmbiosTypeLowerName_0[412:429]: SmbiosTypeManagementDevice,
	_SmbiosTypeName_0[429:449]:      SmbiosTypeManDeviceComponent,
	_SmbiosTypeLowerName_0[429:449]: SmbiosTypeManDeviceComponent,
	_SmbiosTypeName_0[449:469]:      SmbiosTypeManDeviceThreshold,
	_SmbiosTypeLowerName_0[449:469]: SmbiosTypeManDeviceThreshold,
	_SmbiosTypeName_0[469:483]:      SmbiosTypeMemoryChannel,
	_SmbiosTypeLowerName_0[469:483]: SmbiosTypeMemoryChannel,
	_SmbiosTypeName_0[483:494]:      SmbiosTypeIPMIDevice,
	_SmbiosTypeLowerName_0[483:494]: SmbiosTypeIPMIDevice,
	_SmbiosTypeName_0[494:513]:      SmbiosTypeSystemPowerSupply,
	_SmbiosTypeLowerName_0[494:513]: SmbiosTypeSystemPowerSupply,
	_SmbiosTypeName_0[513:528]:      SmbiosTypeAdditionalInfo,
	_SmbiosTypeLowerName_0[513:528]: SmbiosTypeAdditionalInfo,
	_SmbiosTypeName_0[528:544]:      SmbiosTypeOnboardExtended,
	_SmbiosTypeLowerName_0[528:544]: SmbiosTypeOnboardExtended,
	_SmbiosTypeName_0[544:580]:      SmbiosTypeManagementControllerHostInterface,
	_SmbiosTypeLowerName_0[544:580]: SmbiosTypeManagementControllerHostInterface,
	_SmbiosTypeName_0[580:583]:      SmbiosTypeTPM,
	_SmbiosTypeLowerName_0[580:583]: SmbiosTypeTPM,
	_SmbiosTypeName_0[583:603]:      SmbiosTypeProcessorAdditional,
	_SmbiosTypeLowerName_0[583:603]: SmbiosTypeProcessorAdditional,
	_SmbiosTypeName_0[603:621]:      SmbiosTypeFirmwareInventory,
	_SmbiosTypeLowerName_0[603:621]: SmbiosTypeFirmwareInventory,
	_SmbiosTypeName_1[0:8]:          SmbiosTypeInactive,
	_SmbiosTypeLowerName_1[0:8]:     SmbiosTypeInactive,
	_SmbiosTypeName_1[8:20]:         SmbiosTypeEndOfTable,
	_SmbiosTypeLowerName_1[8:20]:    SmbiosTypeEndOfTable,
}

var _SmbiosTypeNames = []string{
	_SmbiosTypeName_0[0:4],
	_SmbiosTypeName_0[4:10],
	_SmbiosTypeName_0[10:15],
	_SmbiosTypeName_0[15:22],
	_SmbiosTypeName_0[22:31],
	_SmbiosTypeName_0[31:48],
	_SmbiosTypeName_0[48:61],
	_SmbiosTypeName_0[61:66],
	_SmbiosTypeName_0[66:80],
	_SmbiosTypeName_0[80:84],
	_SmbiosTypeName_0[84:91],
	_SmbiosTypeName_0[91:102],
	_SmbiosTypeName_0[102:108],
	_SmbiosTypeName_0[108:116],
	_SmbiosTypeName_0[116:134],
	_SmbiosTypeName_0[134:143],
	_SmbiosTypeName_0[143:155],
	_SmbiosTypeName_0[155:168],
	_SmbiosTypeName_0[168:180],
	_SmbiosTypeName_0[180:207],
	_SmbiosTypeName_0[207:235],
	_SmbiosTypeName_0[235:250],
	_SmbiosTypeName_0[250:257],
	_SmbiosTypeName_0[257:269],
	_SmbiosTypeName_0[269:286],
	_SmbiosTypeName_0[286:300],
	_SmbiosTypeName_0[300:307],
	_SmbiosTypeName_0[307:321],
	_SmbiosTypeName_0[321:332],
	_SmbiosTypeName_0[332:339],
	_SmbiosTypeName_0[339:364],
	_SmbiosTypeName_0[364:387],
	_SmbiosTypeName_0[387:398],
	_SmbiosTypeName_0[398:412],
	_SmbiosTypeName_0[412:429],
	_SmbiosTypeName_0[429:449],
	_SmbiosTypeName_0[449:469],
	_SmbiosTypeName_0[469:483],
	_SmbiosTypeName_0[483:494],
	_SmbiosTypeName_0[494:513],
	_SmbiosTypeName_0[513:528],
	_SmbiosTypeName_0[528:544],
	_SmbiosTypeName_0[544:580],
	_SmbiosTypeName_0[580:583],
	_SmbiosTypeName_0[583:603],
	_SmbiosTypeName_0[603:621],
	_SmbiosTypeName_1[0:8],
	_SmbiosTypeName_1[8:20],
}

// SmbiosTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SmbiosTypeString(s string) (SmbiosType, error) {
	if val, ok := _SmbiosTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SmbiosTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SmbiosType values", s)
}

// SmbiosTypeValues returns all values of the enum
func SmbiosTypeValues() []SmbiosType {
	return _SmbiosTypeValues
}

// SmbiosTypeStrings returns a slice of all String values of the enum
func SmbiosTypeStrings() []string {
	strs := make([]string, len(_SmbiosTypeNames))
	copy(strs, _SmbiosTypeNames)
	return strs
}

// IsASmbiosType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SmbiosType) IsASmbiosType() bool {
	for _, v := range _SmbiosTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for SmbiosType
func (i SmbiosType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for SmbiosType
func (i *SmbiosType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("SmbiosType should be a string, got %s", data)
	}

	var err error
	*i, err = SmbiosTypeString(s)
	return err
}
