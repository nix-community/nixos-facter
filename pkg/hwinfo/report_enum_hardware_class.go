// Code generated by "enumer -type=HardwareClass -json -transform=snake -trimprefix HardwareClass -output=./report_enum_hardware_class.go"; DO NOT EDIT.

package hwinfo

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _HardwareClassName = "nonesystemcpukeyboardbraillemousejoystickprinterscannerchip_cardmonitortv_cardgraphics_cardframe_buffercamerasoundstorage_controllernetwork_controllerisdn_adaptermodemnetwork_interfacediskpartitioncdromfloppymanualusb_controllerusbbiospciisapnpbridgehubscsiidememorydvb_cardpcmciapcmcia_controllerfirewirefirewire_controllerhotplughotplug_controllerzippppoewlan_cardredasddsl_adapterblock_devicetapevesa_biosbluetoothfingerprintmmc_controllernvmeunknownall"

var _HardwareClassIndex = [...]uint16{0, 4, 10, 13, 21, 28, 33, 41, 48, 55, 64, 71, 78, 91, 103, 109, 114, 132, 150, 162, 167, 184, 188, 197, 202, 208, 214, 228, 231, 235, 238, 244, 250, 253, 257, 260, 266, 274, 280, 297, 305, 324, 331, 349, 352, 357, 366, 372, 383, 395, 399, 408, 417, 428, 442, 446, 453, 456}

const _HardwareClassLowerName = "nonesystemcpukeyboardbraillemousejoystickprinterscannerchip_cardmonitortv_cardgraphics_cardframe_buffercamerasoundstorage_controllernetwork_controllerisdn_adaptermodemnetwork_interfacediskpartitioncdromfloppymanualusb_controllerusbbiospciisapnpbridgehubscsiidememorydvb_cardpcmciapcmcia_controllerfirewirefirewire_controllerhotplughotplug_controllerzippppoewlan_cardredasddsl_adapterblock_devicetapevesa_biosbluetoothfingerprintmmc_controllernvmeunknownall"

func (i HardwareClass) String() string {
	if i >= HardwareClass(len(_HardwareClassIndex)-1) {
		return fmt.Sprintf("HardwareClass(%d)", i)
	}
	return _HardwareClassName[_HardwareClassIndex[i]:_HardwareClassIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _HardwareClassNoOp() {
	var x [1]struct{}
	_ = x[HardwareClassNone-(0)]
	_ = x[HardwareClassSystem-(1)]
	_ = x[HardwareClassCpu-(2)]
	_ = x[HardwareClassKeyboard-(3)]
	_ = x[HardwareClassBraille-(4)]
	_ = x[HardwareClassMouse-(5)]
	_ = x[HardwareClassJoystick-(6)]
	_ = x[HardwareClassPrinter-(7)]
	_ = x[HardwareClassScanner-(8)]
	_ = x[HardwareClassChipCard-(9)]
	_ = x[HardwareClassMonitor-(10)]
	_ = x[HardwareClassTvCard-(11)]
	_ = x[HardwareClassGraphicsCard-(12)]
	_ = x[HardwareClassFrameBuffer-(13)]
	_ = x[HardwareClassCamera-(14)]
	_ = x[HardwareClassSound-(15)]
	_ = x[HardwareClassStorageController-(16)]
	_ = x[HardwareClassNetworkController-(17)]
	_ = x[HardwareClassIsdnAdapter-(18)]
	_ = x[HardwareClassModem-(19)]
	_ = x[HardwareClassNetworkInterface-(20)]
	_ = x[HardwareClassDisk-(21)]
	_ = x[HardwareClassPartition-(22)]
	_ = x[HardwareClassCdrom-(23)]
	_ = x[HardwareClassFloppy-(24)]
	_ = x[HardwareClassManual-(25)]
	_ = x[HardwareClassUsbController-(26)]
	_ = x[HardwareClassUsb-(27)]
	_ = x[HardwareClassBios-(28)]
	_ = x[HardwareClassPci-(29)]
	_ = x[HardwareClassIsapnp-(30)]
	_ = x[HardwareClassBridge-(31)]
	_ = x[HardwareClassHub-(32)]
	_ = x[HardwareClassScsi-(33)]
	_ = x[HardwareClassIde-(34)]
	_ = x[HardwareClassMemory-(35)]
	_ = x[HardwareClassDvbCard-(36)]
	_ = x[HardwareClassPcmcia-(37)]
	_ = x[HardwareClassPcmciaController-(38)]
	_ = x[HardwareClassFirewire-(39)]
	_ = x[HardwareClassFirewireController-(40)]
	_ = x[HardwareClassHotplug-(41)]
	_ = x[HardwareClassHotplugController-(42)]
	_ = x[HardwareClassZip-(43)]
	_ = x[HardwareClassPppoe-(44)]
	_ = x[HardwareClassWlanCard-(45)]
	_ = x[HardwareClassRedasd-(46)]
	_ = x[HardwareClassDslAdapter-(47)]
	_ = x[HardwareClassBlockDevice-(48)]
	_ = x[HardwareClassTape-(49)]
	_ = x[HardwareClassVesaBios-(50)]
	_ = x[HardwareClassBluetooth-(51)]
	_ = x[HardwareClassFingerprint-(52)]
	_ = x[HardwareClassMmcController-(53)]
	_ = x[HardwareClassNvme-(54)]
	_ = x[HardwareClassUnknown-(55)]
	_ = x[HardwareClassAll-(56)]
}

var _HardwareClassValues = []HardwareClass{HardwareClassNone, HardwareClassSystem, HardwareClassCpu, HardwareClassKeyboard, HardwareClassBraille, HardwareClassMouse, HardwareClassJoystick, HardwareClassPrinter, HardwareClassScanner, HardwareClassChipCard, HardwareClassMonitor, HardwareClassTvCard, HardwareClassGraphicsCard, HardwareClassFrameBuffer, HardwareClassCamera, HardwareClassSound, HardwareClassStorageController, HardwareClassNetworkController, HardwareClassIsdnAdapter, HardwareClassModem, HardwareClassNetworkInterface, HardwareClassDisk, HardwareClassPartition, HardwareClassCdrom, HardwareClassFloppy, HardwareClassManual, HardwareClassUsbController, HardwareClassUsb, HardwareClassBios, HardwareClassPci, HardwareClassIsapnp, HardwareClassBridge, HardwareClassHub, HardwareClassScsi, HardwareClassIde, HardwareClassMemory, HardwareClassDvbCard, HardwareClassPcmcia, HardwareClassPcmciaController, HardwareClassFirewire, HardwareClassFirewireController, HardwareClassHotplug, HardwareClassHotplugController, HardwareClassZip, HardwareClassPppoe, HardwareClassWlanCard, HardwareClassRedasd, HardwareClassDslAdapter, HardwareClassBlockDevice, HardwareClassTape, HardwareClassVesaBios, HardwareClassBluetooth, HardwareClassFingerprint, HardwareClassMmcController, HardwareClassNvme, HardwareClassUnknown, HardwareClassAll}

var _HardwareClassNameToValueMap = map[string]HardwareClass{
	_HardwareClassName[0:4]:          HardwareClassNone,
	_HardwareClassLowerName[0:4]:     HardwareClassNone,
	_HardwareClassName[4:10]:         HardwareClassSystem,
	_HardwareClassLowerName[4:10]:    HardwareClassSystem,
	_HardwareClassName[10:13]:        HardwareClassCpu,
	_HardwareClassLowerName[10:13]:   HardwareClassCpu,
	_HardwareClassName[13:21]:        HardwareClassKeyboard,
	_HardwareClassLowerName[13:21]:   HardwareClassKeyboard,
	_HardwareClassName[21:28]:        HardwareClassBraille,
	_HardwareClassLowerName[21:28]:   HardwareClassBraille,
	_HardwareClassName[28:33]:        HardwareClassMouse,
	_HardwareClassLowerName[28:33]:   HardwareClassMouse,
	_HardwareClassName[33:41]:        HardwareClassJoystick,
	_HardwareClassLowerName[33:41]:   HardwareClassJoystick,
	_HardwareClassName[41:48]:        HardwareClassPrinter,
	_HardwareClassLowerName[41:48]:   HardwareClassPrinter,
	_HardwareClassName[48:55]:        HardwareClassScanner,
	_HardwareClassLowerName[48:55]:   HardwareClassScanner,
	_HardwareClassName[55:64]:        HardwareClassChipCard,
	_HardwareClassLowerName[55:64]:   HardwareClassChipCard,
	_HardwareClassName[64:71]:        HardwareClassMonitor,
	_HardwareClassLowerName[64:71]:   HardwareClassMonitor,
	_HardwareClassName[71:78]:        HardwareClassTvCard,
	_HardwareClassLowerName[71:78]:   HardwareClassTvCard,
	_HardwareClassName[78:91]:        HardwareClassGraphicsCard,
	_HardwareClassLowerName[78:91]:   HardwareClassGraphicsCard,
	_HardwareClassName[91:103]:       HardwareClassFrameBuffer,
	_HardwareClassLowerName[91:103]:  HardwareClassFrameBuffer,
	_HardwareClassName[103:109]:      HardwareClassCamera,
	_HardwareClassLowerName[103:109]: HardwareClassCamera,
	_HardwareClassName[109:114]:      HardwareClassSound,
	_HardwareClassLowerName[109:114]: HardwareClassSound,
	_HardwareClassName[114:132]:      HardwareClassStorageController,
	_HardwareClassLowerName[114:132]: HardwareClassStorageController,
	_HardwareClassName[132:150]:      HardwareClassNetworkController,
	_HardwareClassLowerName[132:150]: HardwareClassNetworkController,
	_HardwareClassName[150:162]:      HardwareClassIsdnAdapter,
	_HardwareClassLowerName[150:162]: HardwareClassIsdnAdapter,
	_HardwareClassName[162:167]:      HardwareClassModem,
	_HardwareClassLowerName[162:167]: HardwareClassModem,
	_HardwareClassName[167:184]:      HardwareClassNetworkInterface,
	_HardwareClassLowerName[167:184]: HardwareClassNetworkInterface,
	_HardwareClassName[184:188]:      HardwareClassDisk,
	_HardwareClassLowerName[184:188]: HardwareClassDisk,
	_HardwareClassName[188:197]:      HardwareClassPartition,
	_HardwareClassLowerName[188:197]: HardwareClassPartition,
	_HardwareClassName[197:202]:      HardwareClassCdrom,
	_HardwareClassLowerName[197:202]: HardwareClassCdrom,
	_HardwareClassName[202:208]:      HardwareClassFloppy,
	_HardwareClassLowerName[202:208]: HardwareClassFloppy,
	_HardwareClassName[208:214]:      HardwareClassManual,
	_HardwareClassLowerName[208:214]: HardwareClassManual,
	_HardwareClassName[214:228]:      HardwareClassUsbController,
	_HardwareClassLowerName[214:228]: HardwareClassUsbController,
	_HardwareClassName[228:231]:      HardwareClassUsb,
	_HardwareClassLowerName[228:231]: HardwareClassUsb,
	_HardwareClassName[231:235]:      HardwareClassBios,
	_HardwareClassLowerName[231:235]: HardwareClassBios,
	_HardwareClassName[235:238]:      HardwareClassPci,
	_HardwareClassLowerName[235:238]: HardwareClassPci,
	_HardwareClassName[238:244]:      HardwareClassIsapnp,
	_HardwareClassLowerName[238:244]: HardwareClassIsapnp,
	_HardwareClassName[244:250]:      HardwareClassBridge,
	_HardwareClassLowerName[244:250]: HardwareClassBridge,
	_HardwareClassName[250:253]:      HardwareClassHub,
	_HardwareClassLowerName[250:253]: HardwareClassHub,
	_HardwareClassName[253:257]:      HardwareClassScsi,
	_HardwareClassLowerName[253:257]: HardwareClassScsi,
	_HardwareClassName[257:260]:      HardwareClassIde,
	_HardwareClassLowerName[257:260]: HardwareClassIde,
	_HardwareClassName[260:266]:      HardwareClassMemory,
	_HardwareClassLowerName[260:266]: HardwareClassMemory,
	_HardwareClassName[266:274]:      HardwareClassDvbCard,
	_HardwareClassLowerName[266:274]: HardwareClassDvbCard,
	_HardwareClassName[274:280]:      HardwareClassPcmcia,
	_HardwareClassLowerName[274:280]: HardwareClassPcmcia,
	_HardwareClassName[280:297]:      HardwareClassPcmciaController,
	_HardwareClassLowerName[280:297]: HardwareClassPcmciaController,
	_HardwareClassName[297:305]:      HardwareClassFirewire,
	_HardwareClassLowerName[297:305]: HardwareClassFirewire,
	_HardwareClassName[305:324]:      HardwareClassFirewireController,
	_HardwareClassLowerName[305:324]: HardwareClassFirewireController,
	_HardwareClassName[324:331]:      HardwareClassHotplug,
	_HardwareClassLowerName[324:331]: HardwareClassHotplug,
	_HardwareClassName[331:349]:      HardwareClassHotplugController,
	_HardwareClassLowerName[331:349]: HardwareClassHotplugController,
	_HardwareClassName[349:352]:      HardwareClassZip,
	_HardwareClassLowerName[349:352]: HardwareClassZip,
	_HardwareClassName[352:357]:      HardwareClassPppoe,
	_HardwareClassLowerName[352:357]: HardwareClassPppoe,
	_HardwareClassName[357:366]:      HardwareClassWlanCard,
	_HardwareClassLowerName[357:366]: HardwareClassWlanCard,
	_HardwareClassName[366:372]:      HardwareClassRedasd,
	_HardwareClassLowerName[366:372]: HardwareClassRedasd,
	_HardwareClassName[372:383]:      HardwareClassDslAdapter,
	_HardwareClassLowerName[372:383]: HardwareClassDslAdapter,
	_HardwareClassName[383:395]:      HardwareClassBlockDevice,
	_HardwareClassLowerName[383:395]: HardwareClassBlockDevice,
	_HardwareClassName[395:399]:      HardwareClassTape,
	_HardwareClassLowerName[395:399]: HardwareClassTape,
	_HardwareClassName[399:408]:      HardwareClassVesaBios,
	_HardwareClassLowerName[399:408]: HardwareClassVesaBios,
	_HardwareClassName[408:417]:      HardwareClassBluetooth,
	_HardwareClassLowerName[408:417]: HardwareClassBluetooth,
	_HardwareClassName[417:428]:      HardwareClassFingerprint,
	_HardwareClassLowerName[417:428]: HardwareClassFingerprint,
	_HardwareClassName[428:442]:      HardwareClassMmcController,
	_HardwareClassLowerName[428:442]: HardwareClassMmcController,
	_HardwareClassName[442:446]:      HardwareClassNvme,
	_HardwareClassLowerName[442:446]: HardwareClassNvme,
	_HardwareClassName[446:453]:      HardwareClassUnknown,
	_HardwareClassLowerName[446:453]: HardwareClassUnknown,
	_HardwareClassName[453:456]:      HardwareClassAll,
	_HardwareClassLowerName[453:456]: HardwareClassAll,
}

var _HardwareClassNames = []string{
	_HardwareClassName[0:4],
	_HardwareClassName[4:10],
	_HardwareClassName[10:13],
	_HardwareClassName[13:21],
	_HardwareClassName[21:28],
	_HardwareClassName[28:33],
	_HardwareClassName[33:41],
	_HardwareClassName[41:48],
	_HardwareClassName[48:55],
	_HardwareClassName[55:64],
	_HardwareClassName[64:71],
	_HardwareClassName[71:78],
	_HardwareClassName[78:91],
	_HardwareClassName[91:103],
	_HardwareClassName[103:109],
	_HardwareClassName[109:114],
	_HardwareClassName[114:132],
	_HardwareClassName[132:150],
	_HardwareClassName[150:162],
	_HardwareClassName[162:167],
	_HardwareClassName[167:184],
	_HardwareClassName[184:188],
	_HardwareClassName[188:197],
	_HardwareClassName[197:202],
	_HardwareClassName[202:208],
	_HardwareClassName[208:214],
	_HardwareClassName[214:228],
	_HardwareClassName[228:231],
	_HardwareClassName[231:235],
	_HardwareClassName[235:238],
	_HardwareClassName[238:244],
	_HardwareClassName[244:250],
	_HardwareClassName[250:253],
	_HardwareClassName[253:257],
	_HardwareClassName[257:260],
	_HardwareClassName[260:266],
	_HardwareClassName[266:274],
	_HardwareClassName[274:280],
	_HardwareClassName[280:297],
	_HardwareClassName[297:305],
	_HardwareClassName[305:324],
	_HardwareClassName[324:331],
	_HardwareClassName[331:349],
	_HardwareClassName[349:352],
	_HardwareClassName[352:357],
	_HardwareClassName[357:366],
	_HardwareClassName[366:372],
	_HardwareClassName[372:383],
	_HardwareClassName[383:395],
	_HardwareClassName[395:399],
	_HardwareClassName[399:408],
	_HardwareClassName[408:417],
	_HardwareClassName[417:428],
	_HardwareClassName[428:442],
	_HardwareClassName[442:446],
	_HardwareClassName[446:453],
	_HardwareClassName[453:456],
}

// HardwareClassString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func HardwareClassString(s string) (HardwareClass, error) {
	if val, ok := _HardwareClassNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _HardwareClassNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to HardwareClass values", s)
}

// HardwareClassValues returns all values of the enum
func HardwareClassValues() []HardwareClass {
	return _HardwareClassValues
}

// HardwareClassStrings returns a slice of all String values of the enum
func HardwareClassStrings() []string {
	strs := make([]string, len(_HardwareClassNames))
	copy(strs, _HardwareClassNames)
	return strs
}

// IsAHardwareClass returns "true" if the value is listed in the enum definition. "false" otherwise
func (i HardwareClass) IsAHardwareClass() bool {
	for _, v := range _HardwareClassValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for HardwareClass
func (i HardwareClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for HardwareClass
func (i *HardwareClass) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("HardwareClass should be a string, got %s", data)
	}

	var err error
	*i, err = HardwareClassString(s)
	return err
}
